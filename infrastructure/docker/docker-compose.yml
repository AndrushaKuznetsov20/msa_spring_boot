version: '3.7'

services:
  config-server:
    container_name: config-server
    image: config-server
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=default,native
    ports:
      - "8887:8888"
    networks:
      - network-msa

  eureka-server:
    container_name: eureka-server
    image: eureka-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_started
    networks:
      - network-msa

  ticket-service:
    container_name: ticket-service
    image: ticket-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - network-msa

  tour-service:
    container_name: tour-service
    image: tour-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - network-msa

  order-service:
    container_name: order-service
    image: order-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/db_order
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Kuznetsov12
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - network-msa

  order-db:
    image: postgres:latest
    container_name: order-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=db_order
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Kuznetsov12
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network-msa

  payment-service:
    container_name: payment-service
    image: payment-service
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payment-db:5432/db_payment
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Kuznetsov12
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - network-msa

  payment-db:
    image: postgres:latest
    container_name: payment-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=db_payment
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Kuznetsov12
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network-msa

  api-gateway:
    container_name: api-gateway
    image: api-gateway
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=default,docker
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    ports:
      - "8765:8765"
    depends_on:
      eureka-server:
        condition: service_started
    networks:
      - network-msa

volumes:
  postgres_data:

networks:
  network-msa: